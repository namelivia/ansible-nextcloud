---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - domain_name is defined
      - database_name is defined
      - database_user is defined
      - database_password is defined
      - mysql_root_password is defined
      - loki_url is defined
      - dump_day is defined
      - backup_day is defined
      - trusted_domains is defined
      - admin_user is defined
      - admin_password is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the nextcloud data volumne
  docker_volume:
    name: nextcloud-data

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: 0755

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: 0755

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config"
    state: directory
    mode: 0755

- name: Create database container
  docker_container:
    name: "{{ application_name }}-database"
    image: "tobi312/rpi-mariadb:10.6-alpine"
    restart_policy: "always"
    cleanup: true
    memory: "100MB"
    exposed_ports:
      - "3306"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - nextcloud-data:/var/lib/mysql
    command: "--transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed"
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "{{ database_name }}"
      MYSQL_USER: "{{ database_user }}"
      MYSQL_PASSWORD: "{{ database_password }}"

- name: Create app container
  docker_container:
    name: "{{ app_container_name }}"
    image: "linuxserver/nextcloud:arm32v7-26.0.2"
    pull: true
    cleanup: true
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
      - name: "bridge"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config:/config"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/data"
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "Europe/Madrid"
      VIRTUAL_HOST: "{{ domain_name }}"
      LETSENCRYPT_HOST: "{{ domain_name }}"
      VIRTUAL_PORT: "80"

- name: Setup database backups
  include_role:
    name: ansible-backups
    tasks_from: setup-mariadb-database-backups
  vars:
    database_container_name: "{{ application_name }}-database"

- name: Setup file backups
  include_role:
    name: ansible-backups
    tasks_from: setup-file-backups

- name: Setup S3 backups
  include_role:
    name: ansible-backups
    tasks_from: setup-s3-backups

- name: Restart proxy
  shell: 
    cmd: docker restart proxy
