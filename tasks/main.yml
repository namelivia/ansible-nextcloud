---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - host_port is defined
      - loki_url is defined
      - dump_day is defined
      - backup_day is defined
      - trusted_domains is defined
      - admin_user is defined
      - admin_password is defined
      - database_container_name is defined
      - database_user is defined
      - database_password is defined
      - user is defined
      - group is defined
      - uid is defined
      - gid is defined
      - database_name is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the nextcloud data volumne
  docker_volume:
    name: nextcloud-data

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create database
  include_role:
    name: ansible-postgres
    tasks_from: create-postgres-database-if-not-exists

- name: Create app container
  docker_container:
    name: "{{ app_container_name }}"
    image: "nextcloud:27.1.7"
    pull: true
    cleanup: true
    user: "{{ uid }}:{{ gid }}"
    restart_policy: "always"
    exposed_ports:
      - "80"
    published_ports:
      - "0.0.0.0:{{ host_port }}:80"
    networks:
      - name: "{{ docker_network_name }}"
      - name: "database_network"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config:/var/www/html/config"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/var/www/html/data"
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    env:
      POSTGRES_DB: "{{ database_name }}"
      POSTGRES_USER: "{{ database_user }}"
      POSTGRES_PASSWORD: "{{ database_password }}"
      POSTGRES_HOST: "{{ database_container_name }}"
      NEXTCLOUD_ADMIN_USER: "{{ admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ admin_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ trusted_domains }}"

- name: Setup file backups
  include_role:
    name: ansible-backups
    tasks_from: setup-file-backups

- name: Setup S3 backups
  include_role:
    name: ansible-backups
    tasks_from: setup-s3-backups
