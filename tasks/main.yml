---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - domain_name is defined
      - database_name is defined
      - database_user is defined
      - database_password is defined
      - mysql_root_password is defined
      - dump_day is defined
      - backup_day is defined
      - trusted_domains is defined
      - admin_user is defined
      - admin_password is defined
      - php_upload_limit is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the nextcloud data volumne
  docker_volume:
    name: nextcloud-data

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: 0777  # TODO: Should be owned by www-data. More info: https://github.com/nextcloud/docker/issues/359

- name: Touch redis session file
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/redis-session.ini"
    state: touch
    mode: 0644  # TODO: More info: https://github.com/nextcloud/docker/issues/763

- name: Create the html directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/html"
    state: directory
    mode: 0777

- name: Create database container
  docker_container:
    name: "{{ application_name }}-database"
    image: "tobi312/rpi-mariadb:10.6-alpine"
    restart_policy: "always"
    cleanup: true
    memory: "100MB"
    exposed_ports:
      - "3306"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - nextcloud-data:/var/lib/mysql
    log_driver: "awslogs"
    command: "--transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-database"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "{{ database_name }}"
      MYSQL_USER: "{{ database_user }}"
      MYSQL_PASSWORD: "{{ database_password }}"
      PHP_UPLOAD_LIMIT: "{{ php_upload_limit }}"

- name: Create app container
  docker_container:
    name: "{{ app_container_name }}"
    image: "nextcloud:24.0.6-fpm-alpine"
    pull: true
    cleanup: true
    restart_policy: "always"
    exposed_ports:
      - "9000"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/html:/var/www/html"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-app"
    env:
      MYSQL_HOST: "{{ application_name }}-database"
      MYSQL_DATABASE: "{{ database_name }}"
      MYSQL_USER: "{{ database_user }}"
      MYSQL_PASSWORD: "{{ database_password }}"
      REDIS_HOST: "{{ application_name }}-cache"
      TRUSTED_DOMAINS: "{{ trusted_domains }}"
      NEXTCLOUD_ADMIN_USER: "{{ admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ admin_password }}"  # TODO: Ignored. https://github.com/nextcloud/docker/issues/1360

- name: Create redis container
  docker_container:
    name: "{{ application_name }}-cache"
    image: "redis:6.2.6-alpine3.15"
    pull: true
    cleanup: true
    restart_policy: "always"
    exposed_ports:
      - "6379"
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-cache"

- name: Create nginx container
  docker_container:
    name: "{{ application_name }}-nginx"
    image: "nginx:latest"
    memory: "10MB"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-nginx"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/conf.d:/etc/nginx/conf.d"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/html:/var/www/html"
    env:
      VIRTUAL_HOST: "{{ domain_name }}"
      LETSENCRYPT_HOST: "{{ domain_name }}"
      VIRTUAL_PORT: "80"

- name: Configure nginx site
  template:
    src: nextcloud.j2
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/conf.d/default.conf"
    owner: root
    group: root
    mode: '0644'

- name: Setup database backups
  include_role:
    name: ansible-backups
    tasks_from: setup-mariadb-database-backups
  vars:
    database_container_name: "{{ application_name }}-database"

- name: Setup file backups
  include_role:
    name: ansible-backups
    tasks_from: setup-file-backups

- name: Setup S3 backups
  include_role:
    name: ansible-backups
    tasks_from: setup-s3-backups
