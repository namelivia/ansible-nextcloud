---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - domain_name is defined
      - database_name is defined
      - database_user is defined
      - database_password is defined
      - mysql_root_password is defined
      - dump_day is defined
      - backup_day is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the nextcloud data volumne
  docker_volume:
    name: nextcloud-data

- name: Create the html folder volume
  docker_volume:
    name: html-folder

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: 0755

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config"
    state: directory
    mode: 0755

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: 0755

- name: Create the themes directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/themes"
    state: directory
    mode: 0755

- name: Create the apps directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/apps"
    state: directory
    mode: 0755

# TODO: There is no official MariaDB image for armv7
- name: Create database container
  docker_container:
    name: "{{ application_name }}-database"
    image: "tobi312/rpi-mariadb:10.3-alpine"
    restart_policy: "always"
    memory: "100MB"
    exposed_ports:
      - "3306"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - nextcloud-database:/var/lib/mysql
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-database"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "{{ database_name }}"
      MYSQL_USER: "{{ database_user }}"
      MYSQL_PASSWORD: "{{ database_password }}"

- name: Create app container
  docker_container:
    name: "{{ app_container_name }}"
    image: "nextcloud:19.0.13-fpm-alpine"
    pull: true
    restart_policy: "always"
    exposed_ports:
      - "9000"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - html-folder:/var/www/html
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config:/var/www/html/config"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/var/www/html/data"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/themes:/var/www/html/themes"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/apps:/var/www/html/apps"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-app"
    env:
      MYSQL_HOST: "{{ application_name }}-database"
      MYSQL_DATABASE: "{{ database_name }}"
      MYSQL_USER: "{{ database_user }}"
      MYSQL_PASSWORD: "{{ database_password }}"

- name: Create nginx container
  docker_container:
    name: "{{ application_name }}-nginx"
    image: "nginx:latest"
    memory: "10MB"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-nginx"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/conf.d:/etc/nginx/conf.d"
      - html-folder:/var/www/html
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/config:/var/www/html/config"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/var/www/html/data"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/apps:/var/www/html/apps"
    env:
      VIRTUAL_HOST: "{{ domain_name }}"
      LETSENCRYPT_HOST: "{{ domain_name }}"
      VIRTUAL_PORT: "80"

- name: Configure nginx site
  template:
    src: nextcloud.j2
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/conf.d/default.conf"
    owner: root
    group: root
    mode: '0644'

- name: Setup database backups
  include_role:
    name: ansible-backups
    tasks_from: setup-mariadb-database-backups
  vars:
    database_container_name: "{{ application_name }}-database"

- name: Setup file backups
  include_role:
    name: ansible-backups
    tasks_from: setup-file-backups

- name: Setup S3 backups
  include_role:
    name: ansible-backups
    tasks_from: setup-s3-backups
